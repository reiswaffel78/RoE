
importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js');

workbox.core.skipWaiting();
workbox.core.clientsClaim();

// Precache all the assets generated by the build process.
// Their URLs are injected into the manifest file.
// In this context, we manually list the core files.
workbox.precaching.precacheAndRoute([
  { url: '/index.html', revision: null },
  { url: '/index.tsx', revision: null },
  { url: '/App.tsx', revision: null },
  { url: '/store/gameStore.ts', revision: null },
  { url: '/core/gameLogic.ts', revision: null },
  // Add other core files here. The build tool would automate this.
]);

// Caching strategy for audio files
workbox.routing.registerRoute(
  ({ request }) => request.destination === 'audio',
  new workbox.strategies.CacheFirst({
    cacheName: 'audio-cache',
    plugins: [
      new workbox.cacheableResponse.CacheableResponsePlugin({
        statuses: [0, 200],
      }),
      new workbox.expiration.ExpirationPlugin({
        maxEntries: 20, // Cache up to 20 audio files
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 Days
      }),
    ],
  })
);

// This message listener allows the new service worker to take control immediately.
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});
